[{"/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/index.js":"1","/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/App.js":"2","/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/reportWebVitals.js":"3","/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/Header.js":"4","/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/components/About.js":"5","/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/components/Navbar.js":"6","/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/components/Home.js":"7","/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/components/Contact.js":"8","/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/dashboard/Dashboard.js":"9","/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/dashboard/Draw.js":"10","/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/dashboard/toolbox.js":"11","/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/mbta-tracker/Map.js":"12","/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/mbta-tracker/draw.js":"13","/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/mbta-tracker/Vehicles.js":"14"},{"size":541,"mtime":1705460691527,"results":"15","hashOfConfig":"16"},{"size":927,"mtime":1706036768845,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1705460691528,"results":"18","hashOfConfig":"16"},{"size":100,"mtime":1705460691524,"results":"19","hashOfConfig":"16"},{"size":4575,"mtime":1705605025153,"results":"20","hashOfConfig":"16"},{"size":1166,"mtime":1706018908806,"results":"21","hashOfConfig":"16"},{"size":227,"mtime":1705460691526,"results":"22","hashOfConfig":"16"},{"size":828,"mtime":1705537973047,"results":"23","hashOfConfig":"16"},{"size":924,"mtime":1706031162993,"results":"24","hashOfConfig":"16"},{"size":9854,"mtime":1706295171651,"results":"25","hashOfConfig":"16"},{"size":1872,"mtime":1705683746563,"results":"26","hashOfConfig":"16"},{"size":3411,"mtime":1706038557484,"results":"27","hashOfConfig":"16"},{"size":1594,"mtime":1706109075963,"results":"28","hashOfConfig":"16"},{"size":6195,"mtime":1706287007609,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1r7afcy",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"49","usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"33"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"33"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/index.js",[],[],[],"/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/App.js",[],[],"/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/reportWebVitals.js",[],[],"/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/Header.js",[],[],"/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/components/About.js",[],[],"/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/components/Navbar.js",["78"],[],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useState } from \"react\";\n\nimport '../Navbar.css'; // Import your CSS file\nconst Navbar = () => {\n  const [showDropdown, setShowDropdown] = useState(false);\n\n  const handleDropdownToggle = () => {\n        setShowDropdown(!showDropdown);\n  }\n\n  return (\n    <nav className=\"navbar\">\n      <ul className={`navbar-links ${showDropdown ? 'show' : ''}`}>\n        <li><Link to=\"/\">Home</Link></li>\n        <li><Link to=\"/about\">About</Link></li>\n        <li><Link to=\"/contact\">Contact</Link></li>\n        <div className=\"border\"></div>\n        <li><Link to=\"/map\">Map</Link></li>\n        <li><Link to=\"/dashboard\">Dashboard</Link></li>\n      </ul>\n      <div className=\"dropdown-toggle\" onClick={handleDropdownToggle}>\n        <img src={process.env.PUBLIC_URL + '/hamburger.png'} alt=\"Icon\"/>\n      </div>\n      {/* Right-aligned icon */}\n        <div className=\"right-icon\">\n            <a target=\"_blank\" href=\"https://github.com/austinengel17\"><img src={process.env.PUBLIC_URL + '/github-mark/github-mark-white.png'} alt=\"Icon\" /></a>\n        </div>\n    </nav>\n  );\n};\n\nexport default Navbar;","/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/components/Home.js",["79"],[],"import Navbar from './Navbar';\nfunction Home() {\n\n\n    return(\n        <>\n            <h1>Welcome to My Personal Site!</h1>\n            <p>Click on one of the links to get started!</p>\n        </>\n    );\n}\nexport default Home;\n","/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/components/Contact.js",[],[],"/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/dashboard/Dashboard.js",["80"],[],"import './Dashboard.css';\nimport { useRef, useEffect, useState } from \"react\";\nimport Draw from './Draw.js';\n\nfunction Dashboard(){\n    const svgRef = useRef(null);\n    const bodyRef = useRef(null);\n    const [dataset, setDataset] = useState(null);\n    useEffect(() => {\n        import('./data.json').then((data)=>{\n            setDataset(data.default);\n        });\n    }, []);\n\n    return (<>\n       {dataset != null ? (\n                <div className=\"dashboard\">\n                    <h4 className=\"dashboard-heading\">D3 Visualization | Milestones</h4>\n                    <svg className=\"dashboard-svg\" id=\"diagram\" ref={svgRef}>\n                        `<Draw dataset={dataset} svgRef={svgRef}/>\n                    </svg>\n                    <div id='dashboard-table'></div>\n                </div>\n            )\n            :\n            (<div>Loading...</div>)\n        }\n        </>\n    );\n}\n\nexport default Dashboard;","/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/dashboard/Draw.js",["81","82","83","84","85","86","87","88"],[],"/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/dashboard/toolbox.js",["89"],[],"\nfunction hello (){\n\tconsole.log(\"hello world\");\n}\n\n\nfunction convertDate(dateString){\n    console.log(\"date strong : \" + dateString);\n\tvar parts = dateString.split('-');\n\tvar day = parseInt(parts[0], 10);\n\tvar monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\tvar month = monthNames.indexOf(parts[1]);\n\tvar year = 2000 + parseInt(parts[2], 10); // Assuming the year is in the range of 2000-2099\n\treturn new Date(year, month, day);\n}\n\nfunction createMilestoneArr(data){\n\tvar milestoneArr = [];\n\tfor(var i = 1, j = 2; j < 8; i++, j++){\n\t\tvar intervalArr = createIntervalArray(\"Milestone \" + i, \"Milestone \" + j, data);\n\t\tmilestoneArr.push(intervalArr);\n\t}\n\treturn milestoneArr;\n}\n\nfunction createIntervalArray(milestoneA, milestoneB, data){\n\tvar intervalArr = [];\n\tdata.forEach(function(dataNode){\n\t\tif(dataNode[milestoneA] && dataNode[milestoneB])\n\t\t\tintervalArr.push(getDifferenceDaysByDate(milestoneA, milestoneB, dataNode));\n\t});\n\tintervalArr = intervalArr.filter(x=>x!==undefined && x>-1);\n\tconsole.log(milestoneA,milestoneB, intervalArr.sort(function(a,b){ return a-b; }));\n\treturn intervalArr.sort(function(a,b){ return a-b; });\n}\n\nfunction getDifferenceDaysByDate(milestoneA, milestoneB, dataNode){\n\tif(dataNode[milestoneB] && dataNode[milestoneA]){\n\t\treturn Math.round((dataNode[milestoneB].getTime() - dataNode[milestoneA].getTime()) / 86400000);\n\t}\n}\n\nfunction createIntervalMedian(intervalArr){\n\tvar half = intervalArr.length/2;\n\n\tif(intervalArr.length %2 === 0){\n\t\t//size is even, must grab the two middle vals\n\t\tvar a = intervalArr[half-1];\n\t\tvar b = intervalArr[half];\n\t\tvar median = Math.round((a + b)/ 2);\n\t\treturn median;\n\t}\n\telse\n\t\treturn intervalArr[Math.ceil(half)-1];\n}\n\nexport {\n    convertDate,\n    createMilestoneArr,\n    createIntervalArray,\n    getDifferenceDaysByDate,\n    createIntervalMedian\n}","/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/mbta-tracker/Map.js",["90","91","92","93","94","95","96"],[],"import { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport Draw from'./draw.js';\nimport Vehicles from'./Vehicles.js';\nimport Select from 'react-select';\n\n\nfunction Map() { \n  const svgRef = useRef(null);\n  const [stationData, setStationData] = useState(null);\n  const [stationMapping, setStationMapping] = useState(null);\n  const [selectedLine, setSelectedLine] = useState(\"Green-E\");\n  const [dataReady, setDataReady] = useState(false);\n\n  var backendHost = \"localhost:8080/\";\n  var controllerEndpoint = \"mbta/v1/livemap\";\n  var vehiclePositionSub = \"/vehicle/location/\" + selectedLine;\n  var mbtaStopsEndpoint = \"/stops/line/\" + selectedLine;\n  var stationMappingEndpoint = \"/stops/child-parent-relation\";\n  const options = [\n    //{ value: 'Green-A', label: 'Green-A' },\n    //{ value: 'Green-B', label: 'Green-B' }, closed line \n    { value: 'Green-C', label: 'Green-C' }, \n//    { value: 'Green-D', label: 'Green-D' }, //stop #71199 not in mapping, where the hell is it\n    { value: 'Green-E', label: 'Green-E' },\n//    { value: 'Orange', label: 'Orange' },\n  ];\n\nuseEffect(()=>{\nsetDataReady(false);\n////////////////////////////////////////////////////////////\n  var xhr = new XMLHttpRequest();//\n    // Making our connection \n  var url = \"http://\" + backendHost + controllerEndpoint + mbtaStopsEndpoint;\n  xhr.open(\"GET\", url, true);\n \n    // function execute after request is successful\n  xhr.onreadystatechange = function () {\n    console.log(\"hi\");\n    if (this.readyState == 4 && this.status == 200) {\n        var temp = JSON.parse(this.responseText);\n        var stationDataTemp = Object.keys(temp).map(v => ({[v.replace(/['\"]+/g, '')]: {...temp[v]}}));\n        console.log(stationDataTemp);\n        setStationData(stationDataTemp);     \n    }\n  }\n  xhr.onerror = function (error){\n      console.error(error);\n    };\n  xhr.send();\n  console.log(\"sent #1\");\n\n///////////////////////////////////////////\n  var xhr2 = new XMLHttpRequest();\n    // Making our connection \n  var url2 = \"http://\" + backendHost + controllerEndpoint + stationMappingEndpoint;\n  xhr2.open(\"GET\", url2, true);\n    // function execute after request is successful\n  xhr2.onreadystatechange = function () {\n    console.log(\"hi\");\n    if (this.readyState == 4 && this.status == 200) {\n        var temp = JSON.parse(this.responseText);\n        console.log(\"mapping .. :\", temp);\n        setStationMapping(temp);      \n    }\n  }\n  xhr2.onerror = function (error){\n      console.error(error);\n    };\n  xhr2.send();\n  console.log(\"sent #2\");\n/////////////////////////\n},[selectedLine]);\n\nuseEffect(()=>{\n  if(stationData != null && stationMapping != null){\n    setDataReady(true);\n  }\n}, [stationData, stationMapping]);\n  const handleChange = (selectedOption) => {\n    setSelectedLine(selectedOption.value);\n    console.log(`Option selected:`, selectedOption.value);\n  };\n\n\n  return (\n    <div className=\"Map\">\n     <Select options={options} onChange={handleChange} placeholder={selectedLine}/>\n    {dataReady && options != null ? (\n      <>\n      <h2>{selectedLine}</h2>\n      <svg ref={svgRef} >\n        <Draw stationData={stationData} svgRef={svgRef} selectedLine={selectedLine}/>\n        <Vehicles svgRef={svgRef} stationData={stationData} stationMapping={stationMapping} selectedLine={selectedLine}/>\n      </svg>\n      </>\n    ) : (<div>Loading...</div>)\n    }\n    </div>\n  );\n\n}\n\nexport default Map;\n","/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/mbta-tracker/draw.js",["97","98","99","100"],[],"/Users/austin/Dev Projects/website/austinengel17.github.io/frontend/src/mbta-tracker/Vehicles.js",["101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124"],[],{"ruleId":"125","severity":1,"message":"126","line":28,"column":13,"nodeType":"127","messageId":"128","endLine":28,"endColumn":72,"fix":"129"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":8,"nodeType":"132","messageId":"133","endLine":1,"endColumn":14},{"ruleId":"130","severity":1,"message":"134","line":7,"column":11,"nodeType":"132","messageId":"133","endLine":7,"endColumn":18},{"ruleId":"130","severity":1,"message":"135","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":12},{"ruleId":"130","severity":1,"message":"136","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":16},{"ruleId":"130","severity":1,"message":"137","line":39,"column":15,"nodeType":"132","messageId":"133","endLine":39,"endColumn":21},{"ruleId":"130","severity":1,"message":"138","line":146,"column":11,"nodeType":"132","messageId":"133","endLine":146,"endColumn":16},{"ruleId":"139","severity":1,"message":"140","line":185,"column":65,"nodeType":"141","messageId":"142","endLine":185,"endColumn":66,"suggestions":"143"},{"ruleId":"139","severity":1,"message":"140","line":186,"column":65,"nodeType":"141","messageId":"142","endLine":186,"endColumn":66,"suggestions":"144"},{"ruleId":"130","severity":1,"message":"145","line":191,"column":25,"nodeType":"132","messageId":"133","endLine":191,"endColumn":34},{"ruleId":"146","severity":1,"message":"147","line":243,"column":8,"nodeType":"148","endLine":243,"endColumn":17,"suggestions":"149"},{"ruleId":"130","severity":1,"message":"150","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":15},{"ruleId":"130","severity":1,"message":"151","line":2,"column":13,"nodeType":"132","messageId":"133","endLine":2,"endColumn":15},{"ruleId":"130","severity":1,"message":"152","line":17,"column":7,"nodeType":"132","messageId":"133","endLine":17,"endColumn":25},{"ruleId":"153","severity":1,"message":"154","line":40,"column":25,"nodeType":"155","messageId":"156","endLine":40,"endColumn":27},{"ruleId":"153","severity":1,"message":"154","line":40,"column":45,"nodeType":"155","messageId":"156","endLine":40,"endColumn":47},{"ruleId":"153","severity":1,"message":"154","line":61,"column":25,"nodeType":"155","messageId":"156","endLine":61,"endColumn":27},{"ruleId":"153","severity":1,"message":"154","line":61,"column":45,"nodeType":"155","messageId":"156","endLine":61,"endColumn":47},{"ruleId":"146","severity":1,"message":"157","line":73,"column":3,"nodeType":"148","endLine":73,"endColumn":17,"suggestions":"158"},{"ruleId":"130","severity":1,"message":"159","line":1,"column":10,"nodeType":"132","messageId":"133","endLine":1,"endColumn":18},{"ruleId":"130","severity":1,"message":"160","line":45,"column":9,"nodeType":"132","messageId":"133","endLine":45,"endColumn":14},{"ruleId":"161","severity":1,"message":"162","line":47,"column":26,"nodeType":"155","messageId":"163","endLine":47,"endColumn":27},{"ruleId":"146","severity":1,"message":"164","line":59,"column":6,"nodeType":"148","endLine":59,"endColumn":19,"suggestions":"165"},{"ruleId":"130","severity":1,"message":"166","line":11,"column":9,"nodeType":"132","messageId":"133","endLine":11,"endColumn":26},{"ruleId":"139","severity":1,"message":"140","line":34,"column":57,"nodeType":"141","messageId":"142","endLine":34,"endColumn":58,"suggestions":"167"},{"ruleId":"153","severity":1,"message":"154","line":37,"column":38,"nodeType":"155","messageId":"156","endLine":37,"endColumn":40},{"ruleId":"153","severity":1,"message":"154","line":38,"column":36,"nodeType":"155","messageId":"156","endLine":38,"endColumn":38},{"ruleId":"153","severity":1,"message":"154","line":43,"column":38,"nodeType":"155","messageId":"156","endLine":43,"endColumn":40},{"ruleId":"153","severity":1,"message":"154","line":44,"column":36,"nodeType":"155","messageId":"156","endLine":44,"endColumn":38},{"ruleId":"153","severity":1,"message":"154","line":50,"column":44,"nodeType":"155","messageId":"156","endLine":50,"endColumn":46},{"ruleId":"153","severity":1,"message":"154","line":57,"column":32,"nodeType":"155","messageId":"156","endLine":57,"endColumn":34},{"ruleId":"153","severity":1,"message":"154","line":68,"column":39,"nodeType":"155","messageId":"156","endLine":68,"endColumn":41},{"ruleId":"153","severity":1,"message":"154","line":74,"column":42,"nodeType":"155","messageId":"156","endLine":74,"endColumn":44},{"ruleId":"130","severity":1,"message":"168","line":79,"column":17,"nodeType":"132","messageId":"133","endLine":79,"endColumn":25},{"ruleId":"139","severity":1,"message":"140","line":95,"column":57,"nodeType":"141","messageId":"142","endLine":95,"endColumn":58,"suggestions":"169"},{"ruleId":"153","severity":1,"message":"154","line":98,"column":38,"nodeType":"155","messageId":"156","endLine":98,"endColumn":40},{"ruleId":"153","severity":1,"message":"154","line":99,"column":36,"nodeType":"155","messageId":"156","endLine":99,"endColumn":38},{"ruleId":"153","severity":1,"message":"154","line":104,"column":38,"nodeType":"155","messageId":"156","endLine":104,"endColumn":40},{"ruleId":"153","severity":1,"message":"154","line":105,"column":36,"nodeType":"155","messageId":"156","endLine":105,"endColumn":38},{"ruleId":"153","severity":1,"message":"154","line":110,"column":50,"nodeType":"155","messageId":"156","endLine":110,"endColumn":52},{"ruleId":"153","severity":1,"message":"154","line":116,"column":36,"nodeType":"155","messageId":"156","endLine":116,"endColumn":38},{"ruleId":"130","severity":1,"message":"168","line":123,"column":19,"nodeType":"132","messageId":"133","endLine":123,"endColumn":27},{"ruleId":"153","severity":1,"message":"154","line":127,"column":44,"nodeType":"155","messageId":"156","endLine":127,"endColumn":46},{"ruleId":"146","severity":1,"message":"170","line":135,"column":8,"nodeType":"148","endLine":135,"endColumn":21,"suggestions":"171"},{"ruleId":"153","severity":1,"message":"154","line":144,"column":28,"nodeType":"155","messageId":"156","endLine":144,"endColumn":30},{"ruleId":"153","severity":1,"message":"154","line":147,"column":35,"nodeType":"155","messageId":"156","endLine":147,"endColumn":37},{"ruleId":"146","severity":1,"message":"172","line":168,"column":7,"nodeType":"148","endLine":168,"endColumn":21,"suggestions":"173"},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"174","text":"175"},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'bodyRef' is assigned a value but never used.","'data' is defined but never used.","'useRef' is defined but never used.","'xStart' is assigned a value but never used.","'cells' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\(.","Literal","unnecessaryEscape",["176","177"],["178","179"],"'firstLine' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'svgRef'. Either include it or remove the dependency array.","ArrayExpression",["180"],"'hello' is defined but never used.","'d3' is defined but never used.","'vehiclePositionSub' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'backendHost', 'controllerEndpoint', 'mbtaStopsEndpoint', and 'stationMappingEndpoint'. Either include them or remove the dependency array.",["181"],"'useState' is defined but never used.","'node2' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'circleRadius', 'lineYAxis', and 'svgRef'. Either include them or remove the dependency array.",["182"],"'mbtaStopsEndpoint' is assigned a value but never used.",["183","184"],"'stopName' is assigned a value but never used.",["185","186"],"React Hook useEffect has missing dependencies: 'inTransitTo', 'incomingAt', 'stationData', 'stationMapping', and 'svgRef'. Either include them or remove the dependency array.",["187"],"React Hook useEffect has missing dependencies: 'backendHost', 'controllerEndpoint', and 'vehiclePositionSub'. Either include them or remove the dependency array.",["188"],[1017,1017]," rel=\"noreferrer\"",{"messageId":"189","fix":"190","desc":"191"},{"messageId":"192","fix":"193","desc":"194"},{"messageId":"189","fix":"195","desc":"191"},{"messageId":"192","fix":"196","desc":"194"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"messageId":"189","fix":"203","desc":"191"},{"messageId":"192","fix":"204","desc":"194"},{"messageId":"189","fix":"205","desc":"191"},{"messageId":"192","fix":"206","desc":"194"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"removeEscape",{"range":"211","text":"212"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"213","text":"214"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"215","text":"212"},{"range":"216","text":"214"},"Update the dependencies array to be: [dataset, svgRef]",{"range":"217","text":"218"},"Update the dependencies array to be: [backendHost, controllerEndpoint, mbtaStopsEndpoint, selectedLine, stationMappingEndpoint]",{"range":"219","text":"220"},"Update the dependencies array to be: [circleRadius, lineYAxis, stationData, svgRef]",{"range":"221","text":"222"},{"range":"223","text":"212"},{"range":"224","text":"214"},{"range":"225","text":"212"},{"range":"226","text":"214"},"Update the dependencies array to be: [inTransitTo, incomingAt, stationData, stationMapping, svgRef, vehicleList]",{"range":"227","text":"228"},"Update the dependencies array to be: [backendHost, controllerEndpoint, selectedLine, vehiclePositionSub]",{"range":"229","text":"230"},[6968,6969],"",[6968,6968],"\\",[7041,7042],[7041,7041],[9819,9828],"[dataset, svgRef]",[2574,2588],"[backendHost, controllerEndpoint, mbtaStopsEndpoint, selectedLine, stationMappingEndpoint]",[1550,1563],"[circleRadius, lineYAxis, stationData, svgRef]",[1314,1315],[1314,1314],[3521,3522],[3521,3521],[5015,5028],"[inTransitTo, incomingAt, stationData, stationMapping, svgRef, vehicleList]",[6148,6162],"[backendHost, controllerEndpoint, selectedLine, vehiclePositionSub]"]